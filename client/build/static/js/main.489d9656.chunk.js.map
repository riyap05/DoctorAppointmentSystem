{"version":3,"sources":["redux/features/alertSlice.js","pages/Login.js","pages/Register.js","Data/Data.js","components/Layout.js","components/DoctorList.js","pages/HomePage.js","components/spinner.js","components/PublicRoute.js","redux/features/userSlice.js","components/ProtectedRoute.js","pages/ApplyDoctor.js","pages/NotificationPage.js","pages/admin/Users.js","pages/admin/Doctors.js","pages/doctor/Profile.js","pages/BookingPage.js","pages/Appointments.js","pages/doctor/DoctorAppointments.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["alertSlice","createSlice","name","initialState","loading","reducers","showLoading","state","hideLoading","actions","Login","navigate","useNavigate","dispacth","useDispatch","React","createElement","Fragment","className","Form","layout","onFinish","async","res","axios","post","values","window","location","reload","data","success","localStorage","setItem","token","message","error","Item","label","Input","type","required","Link","to","Register","dispatch","userMenu","path","icon","adminMenu","Layout","_ref","children","user","useSelector","useLocation","doctorMenu","concat","_id","SidebarMenu","isAdmin","isDoctor","map","menu","isActive","pathname","onClick","handleLogout","clear","style","cursor","Badge","count","notification","length","DoctorList","doctor","color","firstName","lastName","specialization","experience","feesPerConsultation","timings","HomePage","doctors","setDoctors","useState","useEffect","get","headers","Authorization","getItem","getUserData","fontFamily","Row","Spinner","class","role","PublicRoute","Navigate","userSlice","setUser","action","payload","ProtectedRoute","getUser","ApplyDoctor","startTime","format","endTime","userId","gutter","Col","xs","md","lg","rules","placeholder","TimePicker","RangePicker","NotificationPage","handleMarkAllRead","Tabs","TabPane","tab","key","notificationMgs","onClickPath","seennotification","Users","users","setUsers","getUsers","columns","title","dataIndex","render","text","record","Table","dataSource","Doctors","getDoctors","status","doctorId","handleAccountStatus","Profile","setDoctor","params","useParams","id","getDoctorInfo","moment","initialValues","BookingPage","date","setDate","time","setTime","isAvailable","setIsAvailable","DatePicker","aria-required","onChange","value","selectedDate","selectedTime","alert","doctorInfo","userInfo","Appointments","appointments","setAppointments","getAppointments","DoctorAppointments","handleStatus","appointmentsId","App","alerts","BrowserRouter","Routes","Route","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","createRoot","document","getElementById","Provider","store","StrictMode"],"mappings":"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","file":"static/js/main.489d9656.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\nexport const alertSlice = createSlice({\r\n    name:\"alerts\",\r\n    initialState:{\r\n        loading:false\r\n    },\r\n    reducers:{\r\n        showLoading:(state)=>{\r\n            state.loading=true\r\n        },\r\n        hideLoading: (state) =>{\r\n            state.loading = false\r\n        }\r\n    }\r\n    \r\n})\r\n\r\nexport const {showLoading,hideLoading} = alertSlice.actions;","import React from 'react'\r\nimport { Form, Input, message } from \"antd\";\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux'\r\nimport {showLoading,hideLoading} from \"../redux/features/alertSlice\"\r\nimport { Link, useNavigate } from \"react-router-dom\"; //hook\r\nimport '../styles/RegisterStyles.css'\r\n\r\nconst Login = () => {\r\n  /*const onfinishHandler=(values) => {\r\n    console.log(values);\r\n  };*/\r\n\r\n  const navigate =useNavigate()\r\n  const dispacth = useDispatch()\r\n\r\n  const onfinishHandler = async(values)=>{\r\n    try\r\n    {\r\n      dispacth(showLoading());\r\n      const res = await axios.post('/api/v1/user/login', values);\r\n      window.location.reload();\r\n      dispacth(hideLoading());\r\n      if(res.data.success)\r\n      {\r\n        localStorage.setItem(\"token\",res.data.token);\r\n        message.success('Logged In successfully')\r\n        navigate('/')\r\n      }\r\n      else{\r\n        message.error(res.data.message)\r\n      }\r\n    }\r\n    catch(error)\r\n    {\r\n      dispacth(hideLoading());\r\n      //console.log(error)\r\n      message.error('Something went wrong');\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-container \">\r\n        <Form\r\n          layout=\"vertical\"\r\n          onFinish={onfinishHandler}\r\n          className=\"register-form\"\r\n        >\r\n          <h3 className=\"text-center\">Login From</h3>\r\n          <Form.Item label=\"Email\" name=\"email\">\r\n            <Input type=\"email\" required />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\">\r\n            <Input type=\"password\" required />\r\n          </Form.Item>\r\n          <Link to=\"/register\" className=\"m-2\">\r\n            Not a User, Register here\r\n          </Link>\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Login\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\";\r\nimport { Form, Input, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\"; //hook\r\nimport '../styles/RegisterStyles.css'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showLoading,hideLoading } from \"../redux/features/alertSlice\";\r\n\r\n\r\nconst Register = () =>\r\n{\r\nconst navigate = useNavigate();\r\nconst dispatch = useDispatch();\r\n\r\n  //form handler\r\n  const onfinishHandler = async (values) => \r\n  {\r\n    try {\r\n      dispatch(showLoading());\r\n      const res = await axios.post(\"/api/v1/user/register\", values);\r\n      dispatch(hideLoading());\r\n      /*const res=await axios({\r\n        method:\"post\",\r\n        baseURL:\"http://localhost:8080/api/v1\",\r\n        url:'/user/register',\r\n        data:values\r\n      });*/\r\n      if (res.data.success) \r\n      {\r\n        message.success(\"Registered Successfully!\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } \r\n    catch (error)\r\n    {\r\n      dispatch(hideLoading());\r\n      //console.log(error);\r\n      message.error(\"Something Went Wrong\");\r\n    }\r\n\r\n    /*const onfinishHandler=(values) => {\r\n      console.log(values);*/\r\n    };\r\n  return (\r\n    <>\r\n      <div className=\"form-container \">\r\n        <Form\r\n          layout=\"vertical\"\r\n          onFinish={onfinishHandler}\r\n          className=\"register-form\"\r\n        >\r\n          <h3 className=\"text-center\">Register From</h3>\r\n          <Form.Item label=\"Name\" name=\"name\">\r\n            <Input type=\"text\" required />\r\n          </Form.Item>\r\n          <Form.Item label=\"Email\" name=\"email\">\r\n            <Input type=\"email\" required />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\">\r\n            <Input type=\"password\" required />\r\n          </Form.Item>\r\n          <Link to=\"/login\" className=\"m-2\">\r\n            Already user login here\r\n          </Link>\r\n          <button className=\"btn btn-primary\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export const userMenu =[\r\n    {\r\n        name: 'Home',\r\n        path: '/',\r\n        icon: \"fa-solid fa-house\"\r\n    },\r\n    {\r\n        name: 'Appointments',\r\n        path: \"/appointments\",\r\n        icon: 'fa-solid fa-list'\r\n    },\r\n    {\r\n    \r\n        name: 'Apply Doctor',\r\n        path: '/applyDoctor',\r\n        icon: 'fa-solid fa-user-doctor'  \r\n    \r\n    },\r\n    /*{\r\n        name: 'Profile',\r\n        path: '/profile',\r\n        icon: 'fa-solid fa-user'\r\n    },*/\r\n    ];\r\n\r\n    //admin menu\r\n\r\n    export const adminMenu =[\r\n        {\r\n            name: 'Home',\r\n            path: '/',\r\n            icon: \"fa-solid fa-house\"\r\n        },\r\n        {\r\n        \r\n            name: 'Doctors',\r\n            path: '/admin/doctors',\r\n            icon: 'fa-solid fa-user-doctor'  \r\n        \r\n        },\r\n        {\r\n            name: 'Users',\r\n            path: '/admin/users',\r\n            icon: 'fa-solid fa-user'\r\n        },\r\n        {\r\n            name: 'Profile',\r\n            path: '/profile',\r\n            icon: 'fa-solid fa-user'\r\n        },\r\n        \r\n        \r\n        ]","import React from 'react'\r\nimport { adminMenu, userMenu } from '../Data/Data'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport \"../styles/LayoutStyles.css\"\r\nimport { useSelector } from 'react-redux';\r\nimport {message,Badge} from 'antd';\r\n\r\n\r\nconst Layout = ({children}) => {\r\n  const {user}= useSelector((state) => state.user);\r\n  const location=useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout =()=>{\r\n    localStorage.clear()\r\n    message.success('Logout Successfully')\r\n    navigate('/login');\r\n  };\r\n\r\n  //doctor menu//\r\n  const doctorMenu =[\r\n    {\r\n        name: 'Home',\r\n        path: '/',\r\n        icon: \"fa-solid fa-house\"\r\n    },\r\n    {\r\n        name: 'Appointments',\r\n        path: \"./doctor-appointments\",\r\n        icon: 'fa-solid fa-list'\r\n    },\r\n    \r\n    {\r\n        name: 'Profile',\r\n        path: `/doctor/profile/${user?._id}`,\r\n        icon: 'fa-solid fa-user'\r\n    },\r\n    ];\r\n\r\n\r\n\r\n\r\n  //rendering menu list\r\n  const SidebarMenu = user?.isAdmin \r\n  ? adminMenu \r\n  : user?.isDoctor \r\n  ? doctorMenu \r\n  : userMenu;\r\n  \r\n  return (\r\n    <>\r\n       <div className='main'>\r\n        <div className='Layout'>\r\n        <div className='sidebar'>\r\n            <div className='logo'>\r\n              <h6>Doc App</h6>\r\n              <hr/>\r\n            </div>\r\n            <div className=\"menu\">\r\n              {SidebarMenu.map((menu) => {\r\n                const isActive = location.pathname === menu.path;\r\n                return (\r\n                  <>\r\n                    <div className={`menu-item ${isActive && \"active\"}`}>\r\n                      <i className={menu.icon}></i>\r\n                      <Link to={menu.path}>{menu.name}</Link>\r\n                    </div>\r\n                  </>\r\n                );\r\n              })}\r\n            <div className={`menu-item `} onClick={handleLogout}>\r\n                <i className='fa-solid fa-right-from-bracket'></i>\r\n                <Link to=\"/login\">Logout</Link>\r\n            </div>\r\n            {\r\n    },\r\n            </div>\r\n        </div>\r\n        <div className='content'>\r\n            <div className='header'>\r\n              \r\n              <div className='header-content' style={{cursor:'pointer'}}>\r\n              <Badge count={user  && user.notification.length} onClick={()=>{navigate('/notification')}}>\r\n              <i className=\"fa-solid fa-bell\"></i>\r\n              </Badge>\r\n              <Link to=\"/profile\">{user?.name}</Link>\r\n              </div>\r\n            </div>\r\n            <div className='body'>{children}</div>\r\n        </div>\r\n        </div>\r\n       </div> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","\r\n\r\nimport { white } from 'colors';\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst DoctorList = ({doctor}) => {\r\n \r\n    const navigate = useNavigate()\r\n  return (\r\n    <>\r\n        <div className='card m-2 border' style={{cursor : 'pointer'} } onClick={()=>navigate(`/doctor/book-appointmnet/${doctor._id}`)}>\r\n            <div className='card-header orange-with-hint-of-red' style={{color: 'white'}}>\r\n                Dr. {doctor.firstName} {doctor.lastName}\r\n            </div>\r\n            <div className='card-body'>\r\n                <p>\r\n                    <b>Specialization</b> {doctor.specialization}\r\n                </p>\r\n                <p>\r\n                    <b>Experience</b> {doctor.experience}\r\n                </p>\r\n                <p>\r\n                    <b>Fees Per Consultation</b> {doctor.feesPerConsultation}\r\n                </p>\r\n               <p>\r\n                    <b>Timings</b> {doctor.timings[0]} - {doctor.timings[1]}\r\n  </p>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DoctorList\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport Layout from '../components/Layout';\r\nimport { Row } from 'antd';\r\nimport DoctorList from '../components/DoctorList';\r\n\r\n\r\nconst HomePage = () => {\r\n  const [doctors, setDoctors] = useState([])\r\n  //login user data\r\n  const getUserData = async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/user/getAllDoctors',\r\n        {\r\n          headers: { Authorization: \"Bearer \" + localStorage.getItem('token'), },\r\n        });\r\n\r\n      if (res.data.success) {\r\n        setDoctors(res.data.data);\r\n      }\r\n\r\n    } catch (error) {\r\n      //console.log(error)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserData()\r\n  }, [])\r\n  return (\r\n    <Layout>\r\n      <h1 className='text-center' style={{ fontFamily: 'cursive' }}>Book an Appointment</h1>\r\n      <Row>\r\n        {doctors && doctors.map((doctor) => <DoctorList doctor={doctor} />)}\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n\r\n    <div class=\"d-flex justify-content-center spinner\">\r\n    <div class=\"spinner-border\" role='status'>\r\n    <span className=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport default function PublicRoute({children}) {\r\n if(localStorage.getItem('token'))\r\n {\r\n    return <Navigate to=\"/\" />;\r\n }\r\n else\r\n {\r\n    return children;\r\n }\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser } = userSlice.actions;","import React, { useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {showLoading,hideLoading} from \"../redux/features/alertSlice\"\r\nimport axios from 'axios'\r\nimport { setUser } from '../redux/features/userSlice';\r\n\r\nexport default function ProtectedRoute({children}){\r\n\r\n  const dispatch = useDispatch()\r\n  const {user} = useSelector(state => state.user)\r\n\r\n  //get user\r\n  //eslint-disable-next-line\r\n  const getUser = async()=>{\r\n    try {\r\n      dispatch(showLoading())\r\n      const res = await axios.post('/api/v1/user/getUserData',\r\n      { token : localStorage.getItem('token')},\r\n      {\r\n        headers: {\r\n          Authorization : `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      }\r\n      )\r\n\r\n      dispatch(hideLoading())\r\n      if(res.data.success){\r\n        dispatch(setUser(res.data.data))\r\n      }else{\r\n        //eslint-disable-next-line\r\n        <Navigate to=\"/login\" />;\r\n        localStorage.clear()\r\n      }\r\n       \r\n    } catch (error) {\r\n      dispatch(hideLoading());\r\n      localStorage.clear();\r\n      //console.log(error);\r\n      \r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if(!user){\r\n      getUser();\r\n    }\r\n  }, [user,getUser])\r\n\r\n\r\n   if(localStorage.getItem('token')){\r\n    return children;\r\n   } else{\r\n    return <Navigate to=\"/login\" />;\r\n   }\r\n\r\n}","import React from \"react\";\r\nimport Layout from \"./../components/Layout\";\r\nimport { Col, Form, Input, Row, TimePicker, message } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { showLoading, hideLoading } from \"../redux/features/alertSlice\";\r\nimport axios from \"axios\";\r\nimport './Applydoctor.css'\r\n\r\n\r\nconst ApplyDoctor = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // Handle form submission\r\n  const handleFinish = async (values) => {\r\n    try {\r\n      dispatch(showLoading());\r\n\r\n      // Extract hours and minutes from the selected time range\r\n      const startTime = values.timings[0].format(\"HH:mm\");\r\n      const endTime = values.timings[1].format(\"HH:mm\");\r\n\r\n      const res = await axios.post(\r\n        \"/api/v1/user/apply-doctor\",\r\n        { ...values, userId: user._id, timings: [startTime, endTime] },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      dispatch(hideLoading());\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/\");\r\n      } else {\r\n        message.error(res.data.success);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideLoading());\r\n      //console.log(error);\r\n      message.error(\"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className=\"text-center\" style={{fontFamily: \"cursive\"}}>Apply as a Doctor</h1>\r\n      <Form layout=\"vertical\" onFinish={handleFinish} className=\"m-3\">\r\n        <h4 className=\"\" style={{fontFamily: \"cursive\"}}>Personal Details : </h4>\r\n        <Row gutter={20}>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Your first name\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Your last name\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"Phone No\"\r\n              name=\"phone\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Your contact no\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"email\" placeholder=\"Your email address\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item label=\"Website\" name=\"website\">\r\n              <Input type=\"text\" placeholder=\"Your website\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Your clinic address\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <h4 style={{fontFamily: \"cursive\"}}>Professional Details :</h4>\r\n        <Row gutter={20}>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"Specialization\"\r\n              name=\"specialization\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Your specialization\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"Experience\"\r\n              name=\"experience\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Your experience\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item\r\n              label=\"Fees Per Consultation\"\r\n              name=\"feesPerConsultation\"\r\n              required\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"Your contact no\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n            <Form.Item label=\"Timings\" name=\"timings\" required>\r\n              <TimePicker.RangePicker format=\"HH:mm\" />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} md={24} lg={8}></Col>\r\n          <Col xs={24} md={24} lg={8}>\r\n          <button className=\"btn form-btn orange-with-hint-of-red\" type=\"submit\" style={{ color: 'white' }}>Submit</button>\r\n\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ApplyDoctor;\r\n","import React from 'react'\r\nimport Layout from './../components/Layout';\r\nimport { Tabs} from 'antd';\r\nimport { useSelector ,useDispatch} from 'react-redux';\r\nimport { message } from 'antd';\r\nimport {showLoading,hideLoading} from '../redux/features/alertSlice'\r\nimport axios from 'axios'\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nconst NotificationPage = () => {\r\n    const navigate=useNavigate();\r\n    const dispatch=useDispatch();\r\n    const {user} = useSelector((state)=>state.user);\r\n    \r\n    \r\n    const handleMarkAllRead= async ()=>{\r\n        try \r\n        {\r\n            dispatch(showLoading());\r\n            const res = await axios.post('/api/v1/user/get-all-notification',{userId:user._id},\r\n            {\r\n                headers:\r\n                {\r\n                Authorization:`Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n            });\r\n            dispatch(hideLoading());\r\n            \r\n            if(res.data.success)\r\n            {\r\n                message.success(res.data.message);\r\n                window.location.reload();\r\n            }\r\n            else\r\n            {\r\n                message.error(res.data.message)\r\n                window.location.reload();\r\n            }\r\n        } \r\n        catch (error) \r\n        {\r\n            dispatch(hideLoading())\r\n            //console.log(error)\r\n            message.error(\"Something Went Wrong\")\r\n            \r\n        }\r\n    }\r\n    \r\n    //Delete Notification\r\n    const handleDeleteAllRead= async()=>{\r\n        try \r\n        {\r\n            dispatch(showLoading());\r\n            const res=await axios.post('/api/v1/user/delete-all-notification',{userId:user._id},{headers:\r\n            {\r\n                Authorization: `Bearer ${localStorage.getItem('token')}` \r\n            }})\r\n            dispatch(hideLoading());\r\n            if(res.data.success)\r\n            {\r\n                message.success(res.data.message);\r\n            }\r\n            else\r\n            {\r\n                message.error(res.data.message);\r\n            }\r\n\r\n        } \r\n        catch (error) \r\n        {\r\n            dispatch(hideLoading())\r\n            //console.log(error);\r\n            message.error('Something went wrong in deleting the notifications')\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <h4 className='p-3 text-center'>Notification Page</h4>\r\n      <Tabs>\r\n        <Tabs.TabPane tab=\"unRead\" key={0}>\r\n            <div className='d-flex justify-content-end'>\r\n                <button className='p-2 m-sm-3 rounded btn btn-primary' style={{cursor:'pointer'}} onClick={handleMarkAllRead}>Mark All Read</button>\r\n            </div>\r\n            {\r\n                user?.notification.map(notificationMgs => (\r\n                    <div className='card' style={{cursor:'pointer'}}>\r\n                        <div className='card-text' onClick={()=>{navigate(notificationMgs.onClickPath)}}>\r\n                            {notificationMgs.message}\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </Tabs.TabPane>\r\n\r\n\r\n\r\n        \r\n        <Tabs.TabPane tab=\"Read\" key={1}>\r\n            <div className='d-flex justify-content-end'>\r\n            <button className='p-2 m-sm-3 rounded btn btn-primary' style={{cursor:'pointer'}} onClick={handleMarkAllRead}>Delete All</button>\r\n            </div>\r\n            {\r\n                user?.seennotification.map(notificationMgs => (\r\n                    <div className='card' style={{cursor:'pointer'}}>\r\n                        <div className='card-text'  onClick={()=>{navigate(notificationMgs.onClickPath)}}>\r\n                            {notificationMgs.message}\r\n                        </div>\r\n\r\n                    </div>\r\n                ))\r\n            }\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NotificationPage\r\n","import Layout from '../../components/Layout'\r\nimport React,{useEffect,useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Table } from 'antd'\r\n\r\n\r\nconst Users = () => {\r\n\r\n  const [users,setUsers] = useState([])\r\n\r\n  //getUsers\r\n  const getUsers = async ()=>{\r\n    try {\r\n      const res = await axios.get('/api/v1/admin/getAllUsers',{\r\n        headers : {\r\n          Authorization : `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n\r\n      if(res.data.success)\r\n      {\r\n        setUsers(res.data.data);\r\n      }\r\n      \r\n    } catch (error)\r\n    {\r\n      //console.log(error)\r\n      \r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getUsers();\r\n  },[])\r\n\r\n  //antd table col\r\n  const columns = [{\r\n    title : 'Name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title : 'Email',\r\n    dataIndex: 'email',\r\n  },\r\n  {\r\n    title : 'Doctor',\r\n    dataIndex: 'isDoctor',\r\n    render: (text,record) => (\r\n      <span>{record.isDoctor? 'Yes' : 'No'}</span>\r\n    )\r\n  },\r\n  {\r\n    title : 'Created At',\r\n    dataIndex: 'createdAt',\r\n  },\r\n  {\r\n    title: \"Actions\",\r\n      dataIndex: \"actions\",\r\n      render: (text, record) => (\r\n        <div className=\"d-flex\">\r\n          <button className=\"btn btn-danger\">Block</button>\r\n        </div>\r\n      )\r\n  }\r\n  ]\r\n\r\n  return (\r\n    <Layout>\r\n      <h1 className='text-center m-2'>Users List</h1>\r\n      <Table columns={columns} dataSource={users}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default  Users\r\n","import React,{useState,useEffect} from 'react'\r\nimport Layout from './../../components/Layout';\r\nimport axios from 'axios';\r\nimport { Table, message } from 'antd'\r\n\r\n\r\n\r\nconst Doctors = () => {\r\n  const [doctors,setDoctors] = useState([])\r\n\r\n\r\n  const getDoctors = async ()=>{\r\n    try {\r\n      const res = await axios.get('/api/v1/admin/getAllDoctors',{\r\n        headers : {\r\n          Authorization : `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n\r\n      if(res.data.success)\r\n      {\r\n        setDoctors(res.data.data);\r\n      }\r\n      \r\n    } catch (error)\r\n    {\r\n      //console.log(error)\r\n      \r\n    }\r\n  }\r\n\r\n  const handleAccountStatus = async(record,status)=>\r\n  {\r\n    try\r\n    {\r\n      const res= await axios.post('/api/v1/admin/changeAccountStatus',{doctorId : record._id,userId: record.userId, status: status},\r\n      {\r\n        headers: \r\n        {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        }\r\n      });\r\n\r\n      if(res.data.success)\r\n      {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      }\r\n    } catch (error)\r\n    {\r\n      //console.log(error)\r\n      message.error('Something Went Wrong')\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getDoctors();\r\n  },[])\r\n\r\n  const columns = [\r\n  {\r\n    title : 'Name',\r\n    dataIndex: 'name',\r\n    render: (text,record) => (\r\n      <span>{record.firstName} {record.lastName}</span>\r\n    )\r\n  },\r\n  {\r\n    title : 'Status',\r\n    dataIndex : 'status',\r\n  },\r\n\r\n  {\r\n    title : 'Phone No.',\r\n    dataIndex : 'phone',\r\n  },\r\n  {\r\n    title : 'Actions',\r\n    dataIndex : 'actions',\r\n    render: (text,record) => (\r\n      <div className='d-flex'>\r\n        {record.status === 'Pending' ? \r\n        <button className='btn btn-success' onClick={()=> handleAccountStatus(record, 'approved')}>Approve</button> : \r\n        <button className='btn btn-danger'>Reject</button>}\r\n      </div>\r\n    )\r\n  },\r\n]\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>All Doctors</h1>\r\n      <Table columns={columns} dataSource={doctors}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Doctors\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"./../../components/Layout\";\r\nimport axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Col, Form, Input, Row, TimePicker, message } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { showLoading, hideLoading } from \"../../redux/features/alertSlice\";\r\nimport moment from \"moment\";\r\n\r\nconst Profile = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const [doctor, setDoctor] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  // update doc ==========\r\n  //handle form\r\n  const handleFinish = async (values) => {\r\n    try {\r\n      dispatch(showLoading());\r\n      const res = await axios.post(\r\n        \"/api/v1/doctor/updateProfile\",\r\n        {\r\n          ...values,\r\n          userId: user._id,\r\n          timings: [\r\n            moment(values.timings[0]).format(\"HH:mm\"),\r\n            moment(values.timings[1]).format(\"HH:mm\"),\r\n          ],\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch(hideLoading());\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/\");\r\n      } else {\r\n        message.error(res.data.success);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideLoading());\r\n      //console.log(error);\r\n      message.error(\"Somthing Went Wrrong \");\r\n    }\r\n  };\r\n  // update doc ==========\r\n\r\n  //getDOc Details\r\n  const getDoctorInfo = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/doctor/getDoctorInfo\",\r\n        { userId: params.id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        setDoctor(res.data.data);\r\n      }\r\n    } catch (error) {\r\n      //console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDoctorInfo();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <h1>Manage Profile</h1>\r\n      {doctor && (\r\n        <Form\r\n          layout=\"vertical\"\r\n          onFinish={handleFinish}\r\n          className=\"m-3\"\r\n          initialValues={{\r\n            ...doctor,\r\n            timings: [\r\n              moment(doctor.timings[0], \"HH:mm\"),\r\n              moment(doctor.timings[1], \"HH:mm\"),\r\n            ],\r\n          }}\r\n        >\r\n          <h4 className=\"\">Personal Details : </h4>\r\n          <Row gutter={20}>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"your first name\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"your last name\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"Phone No\"\r\n                name=\"phone\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"your contact no\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"email\" placeholder=\"your email address\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item label=\"Website\" name=\"website\">\r\n                <Input type=\"text\" placeholder=\"your website\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"Address\"\r\n                name=\"address\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"your clinic address\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <h4>Professional Details :</h4>\r\n          <Row gutter={20}>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"Specialization\"\r\n                name=\"specialization\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"your specialization\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"Experience\"\r\n                name=\"experience\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"your experience\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item\r\n                label=\"Fees Per Consultation\"\r\n                name=\"feesPerConsultation\"\r\n                required\r\n                rules={[{ required: true }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"your contact no\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <Form.Item label=\"Timings\" name=\"timings\" required>\r\n                <TimePicker.RangePicker format=\"HH:mm\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={8}></Col>\r\n            <Col xs={24} md={24} lg={8}>\r\n              <button className=\"btn btn-primary form-btn\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { DatePicker, message, TimePicker } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showLoading, hideLoading } from \"../redux/features/alertSlice\";\r\n\r\nconst BookingPage = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n  const params = useParams();\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState();\r\n  const [isAvailable, setIsAvailable] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // login user data\r\n  const getUserData = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/doctor/getDoctorById\",\r\n        { doctorId: params.doctorId },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        setDoctors(res.data.data);\r\n      }\r\n    } catch (error) {\r\n      //console.log(error);\r\n    }\r\n  };\r\n  //handle availiblity\r\n  const handleAvailability = async () => {\r\n    try {\r\n      dispatch(showLoading());\r\n      const res = await axios.post(\r\n        \"/api/v1/user/booking-availbility\",\r\n        { doctorId: params.doctorId, date, time },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch(hideLoading());\r\n      if (res.data.success) {\r\n        setIsAvailable(true);\r\n        //console.log(isAvailable);\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideLoading());\r\n      //console.log(error);\r\n    }\r\n  };\r\n  //booking func\r\n  const handleBooking = async () => {\r\n    try {\r\n      setIsAvailable(true);\r\n      if (!date && !time) {\r\n        return alert(\"Date & Time Required\");\r\n      }\r\n      dispatch(showLoading());\r\n      const res = await axios.post(\r\n        \"/api/v1/user/book-appointment\",\r\n        {\r\n          doctorId: params.doctorId,\r\n          userId: user._id,\r\n          doctorInfo: doctors,\r\n          userInfo: user,\r\n          date: date,\r\n          time: time,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      dispatch(hideLoading());\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideLoading());\r\n      //console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <h3>Booking Page</h3>\r\n      <div className=\"container m-2\">\r\n        {doctors && (\r\n          <div>\r\n            <h4>\r\n              Dr.{doctors.firstName} {doctors.lastName}\r\n            </h4>\r\n            <h4>Fees : {doctors.feesPerConsultation}</h4>\r\n            <h4>\r\n              Timings : {doctors.timings && doctors.timings[0]} -{\" \"}\r\n              {doctors.timings && doctors.timings[1]}{\" \"}\r\n            </h4>\r\n            <div className=\"d-flex flex-column w-50\">\r\n            <DatePicker\r\n            aria-required={true}\r\n            className=\"m-2\"\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={(value) => {\r\n            if (value) {\r\n            const selectedDate = value.format(\"DD-MM-YYYY\");\r\n            setDate(selectedDate);\r\n            } else {\r\n            setDate(\"\"); // Reset date if value is empty\r\n            }\r\n            }}\r\n            />\r\n              <TimePicker\r\n                format=\"HH:mm\"\r\n                className=\"mt-3\"\r\n                onChange={(value) => {\r\n                if (value) {\r\n                const selectedTime = value.format(\"HH:mm\");\r\n                setTime(selectedTime);\r\n               } else {\r\n              setTime(\"\"); // Reset time if value is empty\r\n              }\r\n              }}\r\n              />\r\n\r\n              <button\r\n                className=\"btn btn-primary mt-2\"\r\n                onClick={handleAvailability}\r\n              >\r\n                Check Availability\r\n              </button>\r\n\r\n              <button className=\"btn btn-dark mt-2\" onClick={handleBooking}>\r\n                Book Now\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BookingPage;","import React, { useState, useEffect} from 'react'\r\nimport Layout from './../components/Layout';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { Table } from 'antd';\r\nimport './Applydoctor.css';\r\n\r\nconst Appointments = () => {\r\n\r\n    const [appointments, setAppointments] = useState([])\r\n\r\n    const getAppointments = async() => {\r\n        try {\r\n            const res = await axios.get('/api/v1/user/user-appointments', {\r\n                headers: {\r\n                    Authorization: `bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n\r\n            if(res.data.success){\r\n                setAppointments(res.data.data);\r\n            }\r\n            \r\n        } catch (error)\r\n        {\r\n            //console.log(error)\r\n\r\n            \r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getAppointments();\r\n    },[]);\r\n\r\n    const columns = [\r\n        {\r\n            title:'ID',\r\n            dataIndex: '_id'\r\n        },\r\n        /*{\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            render:(text,record) => (\r\n                <span>\r\n                {record.doctorId.firstName} {record.doctorId.lastName}\r\n                </span>\r\n            )\r\n        },\r\n\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            render:(text,record) => (\r\n                <span>\r\n                {record.doctorInfo.phone}\r\n                </span>\r\n            )\r\n        },*/\r\n        {\r\n            title: \"Date & Time\",\r\n      dataIndex: \"date\",\r\n      render: (text, record) => (\r\n        <span>\r\n          {moment(record.date).format(\"DD-MM-YYYY\")} &nbsp;\r\n          {moment(record.time).format(\"HH:mm\")} \r\n        </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n        \r\n    ];\r\n  return (\r\n    <Layout>\r\n      <h1  className='text-center'  style={{fontFamily: 'cursive'}}>Appointments List</h1>\r\n      <Table  columns={columns } dataSource={appointments}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Appointments\r\n","import React, { useState, useEffect} from 'react';\r\nimport Layout from './../../components/Layout';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport { Table, message } from 'antd';\r\n\r\nconst DoctorAppointments = () => {\r\n    const [appointments, setAppointments] = useState([])\r\n    const getAppointments = async() => {\r\n        try {\r\n            const res = await axios.get('/api/v1/doctor/doctor-appointments', {\r\n                headers: {\r\n                    Authorization: `bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n\r\n            if(res.data.success){\r\n                setAppointments(res.data.data);\r\n            }\r\n            \r\n        } catch (error)\r\n        {\r\n            //console.log(error)\r\n        }\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getAppointments();\r\n    },[]);\r\n\r\n    const handleStatus = async(record,status)=>\r\n    {\r\n        try {\r\n            const res = await axios.post('/api/v1/doctor/update-status',{appointmentsId: record._id, status},\r\n            {\r\n                headers: {\r\n                    Authorization : `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n\r\n            if(res.data.success){\r\n                message.success(res.data.message)\r\n                getAppointments();\r\n            }\r\n            \r\n        } catch (error) \r\n        {\r\n            //console.log(error)\r\n            message.error('Something Went Wrong')\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title:'ID',\r\n            dataIndex: '_id'\r\n        },\r\n        /*{\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            render:(text,record) => (\r\n                <span>\r\n                {record.doctorId.firstName} {record.doctorId.lastName}\r\n                </span>\r\n            )\r\n        },\r\n\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            render:(text,record) => (\r\n                <span>\r\n                {record.doctorInfo.phone}\r\n                </span>\r\n            )\r\n        },*/\r\n        {\r\n            title: \"Date & Time\",\r\n      dataIndex: \"date\",\r\n      render: (text, record) => (\r\n        <span>\r\n          {moment(record.date).format(\"DD-MM-YYYY\")} &nbsp;\r\n          {moment(record.time).format(\"HH:mm\")} \r\n        </span>\r\n            )\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n        },\r\n\r\n        {\r\n            title: 'Actions',\r\n            dataIndex: 'actions',\r\n            render : (text,record) =>(\r\n                <div className='d-flex'>\r\n                    {\r\n                        record.status === \"Pending\" && (\r\n                            <div className='d-flex'>\r\n                                <button className='btn btn-success' onClick={()=>{handleStatus(record,'Approved')}}>Approve</button>\r\n                                <button className='btn btn-danger ms-2' onClick={()=>{handleStatus(record,'reject')}}>Reject</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            )\r\n        },\r\n        \r\n    ];\r\n\r\n    \r\n  return (\r\n    <Layout>\r\n      <h1>Appointments List</h1>\r\n      <Table columns={columns} dataSource={appointments}/>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default DoctorAppointments\r\n","import {BrowserRouter,Route,Routes} from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport HomePage from './pages/HomePage';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Spinner from './components/spinner';\nimport PublicRoute from './components/PublicRoute';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport ApplyDoctor from './pages/ApplyDoctor';\nimport NotificationPage from './pages/NotificationPage';\nimport Users from './pages/admin/Users';\nimport Doctors from './pages/admin/Doctors';\nimport Profile from './pages/doctor/Profile';\nimport BookingPage from './pages/BookingPage';\nimport Appointments from './pages/Appointments';\nimport DoctorAppointments from './pages/doctor/DoctorAppointments';\n\n\nfunction App() {\n  const {loading} = useSelector(state => state.alerts)\n  return (\n    <>\n      <BrowserRouter>\n      {loading ? (<Spinner/>): (\n        <Routes>\n        \n        \n        <Route path='/applydoctor' element={\n        <ProtectedRoute>\n          <ApplyDoctor/>\n        </ProtectedRoute>\n        }/>\n\n        <Route path='/doctor/profile/:id' element={\n        <ProtectedRoute>\n          <Profile/>\n        </ProtectedRoute>\n        }/>\n\n        <Route path='/doctor/book-appointmnet/:doctorId' element={\n        <ProtectedRoute>\n          <BookingPage/>\n        </ProtectedRoute>\n        }/>\n\n\n        \n        <Route path='/admin/users' element={\n        <ProtectedRoute>\n          <Users/>\n        </ProtectedRoute>\n        }/>\n\n        <Route path='/admin/doctors' element={\n        <ProtectedRoute>\n          <Doctors/>\n        </ProtectedRoute>\n        }/>\n\n        <Route path='/notification' element={\n        <ProtectedRoute>\n          <NotificationPage/>\n        </ProtectedRoute>\n        }/>\n        \n        <Route path='/login' element={\n          <PublicRoute>\n            <Login/>\n          </PublicRoute>}\n        />\n        <Route path='/register' element={\n          <PublicRoute>\n            <Register/>\n          </PublicRoute>}\n        />\n\n\n          <Route path='/appointments' element={\n          <ProtectedRoute>\n            <Appointments/>\n          </ProtectedRoute>}\n        />\n\n        <Route path='/doctor-appointments' element={\n          <ProtectedRoute>\n            <DoctorAppointments/>\n          </ProtectedRoute>}\n        />\n\n        <Route path='/' element={\n        <ProtectedRoute>\n          <HomePage/>\n        </ProtectedRoute>\n        }/>\n\n      </Routes>\n      )}\n        \n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport { alertSlice } from './features/alertSlice';\r\nimport { userSlice } from './features/userSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        alerts : alertSlice.reducer,\r\n        user: userSlice.reducer,\r\n    },\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport \"antd/dist/reset.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <React.StrictMode>\n    <App />\n    </React.StrictMode>\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}